#!/bin/bash
source $GS_INIT_PATH
__git-story-init

##########
#  done  #
##########

usage() {
  __gs-print "
usage:
\t git done
only if all changes have been committed.
otherwise run:
\t git done 'Commit message' <target_branch>
will fetch and merge <target_branch>. <target_branch> is optional and defaults to $GS_GIT_STORY_BRANCH.
note:"
  __gs-warning "\t Can cause merge conflicts"
}

main() {
  __gs-check-usage-param $1
  main-exec "$@"
}

main-exec() {
  if [[ $(__gs-is-clean-dir) == "dirty" ]]; then
    if [[ -z "$1" ]]; then
      __gs-error "You have uncommited changes you must provide a commit message."
      __gs-print "example: "
      __gs-print "\t git done 'Any commit message'"
      die
    fi
    git addcom "$1"
  elif [[ ! -z "$1" ]]; then
    __gs-warning "Nothing to commit. Ignoring commit message."
  fi

  git test

  if [[ $GS_PRINT_CHECKLIST == true ]]; then
    __gs-done-checklist-print
    confirm_message="Have you answered yes to all of the above?"
  else
    confirm_message="Are your sure?"
  fi

  __gs-print ""

  if [[ $GS_PROMPT_ON_DONE  == true ]]; then
    __gs-continue-prompt "$confirm_message"
  fi
  gs-done-execute "$@"
}

gs-done-execute() {
  local current="$(__gs-current-branch)"
  __gs-sync-branch $current $current

  local target=${2:-master}
  __gs-sync-branch $target $current

  __gs-print ""
  __gs-success "Success."
}

main "$@"
